version: '3.4'

services:
    api.accounts:
        depends_on:
            - redis
            - sqlServer
        networks:
            - polyqube
        image: ${DOCKER_REGISTRY-}apiaccounts
        build:
            context: .
            dockerfile: src/Services/Accounts/API.Accounts/Dockerfile

    api.gateway:
        networks:
            - polyqube
        image: ${DOCKER_REGISTRY-}apigateway
        build:
            context: .
            dockerfile: src/Gateways/MainGateway/API.Gateway/Dockerfile

    api.filestorage:
        networks:
            - polyqube
        image: ${DOCKER_REGISTRY-}apifilestorage
        build:
            context: .
            dockerfile: src/Services/FileStorage/API.FileStorage/Dockerfile

    redis:
        networks:
            - polyqube
        container_name: "Redis"
        image: redis:7.4.2-alpine
        volumes:
            - redisData:/data
    
    redisinsight:
        networks:
            - polyqube
        container_name: "RedisInsight"
        image: redis/redisinsight:latest
        ports:
            - 5540:5540
        volumes:
            - redisinsightData:/data
    
    sqlServer:
        networks:
            - polyqube
        container_name: "SqlServer"
        image: mcr.microsoft.com/mssql/server:2022-latest
        environment:
            - ACCEPT_EULA=Y
            - SA_PASSWORD=${DB_PASSWORD}
            - MSSQL_PID=Developer
        volumes:
            - sqlServerData:/var/opt/mssql

    grafana:
        networks:
            - polyqube
        container_name: "Grafana"
        image: grafana/otel-lgtm
        ports:
            - 9090:9090
            - 9010:3000
        expose:
            - "4317"
            - "4318"
        volumes:
            - grafanaData:/data
            #- ./config/prometheus.yaml:/otel-lgtm/prometheus.yaml:ro
            - ./config/loki-config.yaml:/otel-lgtm/loki-config.yaml:ro
        depends_on:
            - api.accounts
            - api.gateway

    minio:
        networks:
            - polyqube
        container_name: "Minio"
        image: minio/minio:latest
        ports:
            - 9100:9000
            - 9101:9001
        volumes:
            - minioData:/data
        environment:
            MINIO_ROOT_USER: ${MINIO_ROOT_USER}
            MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
        command: server /data --console-address ":9001"

    rabbitmq:
        networks:
            - polyqube
        container_name: "RabbitMQ"
        image: rabbitmq:4-management-alpine
        ports:
            - 15672:15672
            - 5672:5672
        environment:
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
        volumes:
            - rabbitmqData:/var/lib/rabbitmq

networks:
    polyqube:
volumes:
    redisData:
    redisinsightData:
    sqlServerData:
    grafanaData:
    minioData:
    rabbitmqData:
